@page "/topic/{urlName}"
@inject NavigationManager NavManager
@using SharpScape.Website.Components.Post
<link href="https://code.ionicframework.com/ionicons/2.0.1/css/ionicons.min.css" rel="stylesheet">
<div class="background">
    <div class="container">
        <div class="row text-left mb-5">
            <div class="col-lg-6 mb-3 mb-sm-0">
                <div class="dropdown bootstrap-select form-control form-control-lg bg-white bg-op-9 text-sm w-lg-50" style="width: 100%;">
                    <select class="form-control form-control-lg bg-white bg-op-9 text-sm w-lg-50" data-toggle="select" tabindex="-98">
                        <option> Categories </option>
                        <option> Learn </option>
                        <option> Share </option>
                        <option> Build </option>
                    </select>
                </div>
            </div>
            <div class="col-lg-6 text-lg-right">
                <div class="dropdown bootstrap-select form-control form-control-lg bg-white bg-op-9 ml-auto text-sm w-lg-50" style="width: 100%;">
                    <select class="form-control form-control-lg bg-white bg-op-9 ml-auto text-sm w-lg-50" data-toggle="select" tabindex="-98">
                        <option> Filter by </option>
                        <option> Votes </option>
                        <option> Replys </option>
                        <option> Views </option>
                    </select>
                </div>
            </div>
        </div>
        <div class="title">@UrlName</div>
        <div class="card">
            <div class="row align-items-center">
                <div class="col-md-8 mb-3 mb-sm-0">
                    <h5>
                        <span>Topic</span>
                    </h5>
                </div>
                <div class="col-md-4 op-7">
                    <div class="row text-center op-7">
                        <div class="col px-1"> <span class="d-block text-sm">Votes</span> </div>
                        <div class="col px-1"> <span class="d-block text-sm">Replies</span> </div>
                        <div class="col px-1"> <span class="d-block text-sm">Views</span> </div>
                    </div>
                </div>
            </div>
        </div>
        <Post
            Route="Drupal 8 quick starter guide"
            Title="Drupal 8 quick starter guide"
            Date="08/17/2000 16:32:32"
            Author="KenyeW"
            Votes="251"
            Replies="200"
            Views="199"
        />
        <Post
            Route="Drupal 8 quick starter guide"
            Title="Drupal 8 quick starter guide"
            Date="08/17/2000 16:32:32"
            Author="KenyeW"
            Votes="251"
            Replies="200"
            Views="199"
        />
        <Post
            Route="Drupal 8 quick starter guide"
            Title="Drupal 8 quick starter guide"
            Date="08/17/2000 16:32:32"
            Author="KenyeW"
            Votes="251"
            Replies="200"
            Views="199"
        />
        <Post
            Route="Drupal 8 quick starter guide"
            Title="Drupal 8 quick starter guide"
            Date="08/17/2000 16:32:32"
            Author="KenyeW"
            Votes="251"
            Replies="200"
            Views="199"
        />
        @foreach (Topic item in TopicList)
        {
            <Post
                Route=@item.Title
                Title=@item.Title
                Date=@item.Date
                Author="Anonymous"
                Votes="251"
                Replies="200"
                Views="199"
            />
        }
        </div>
        <div class="row createbutton">
            <button type="button" class="btn btn-primary" s @onclick="@OpenCreatePost">Create Post</button>
        </div>
        @if(CreatePost){
            <div class="modal fade show" id="myModal" style="display:block; background-color: rgba(10,10,10,.8);" aria-modal="true" role="dialog">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h4 class="modal-title">Create A Topic</h4>
                        </div>
                                <EditForm Model="@tTopic" OnValidSubmit=@HandleValidSubmit>
                        <div class="modal-body">
                            @* <form model="@tTopic"> *@
                                <div class="form-group">
                                    <label for="recipient-name" class="col-form-label">Title:</label>
                                    @* <input type="text" class="form-control" id="recipient-name" /> *@
                                <InputText class="form-control" @bind-Value="tTopic.Title" />
                                </div>
                                <div class="form-group">
                                    <label for="message-text" class="col-form-label">Content:</label>
                                    @* <textarea class="form-control" id="message-text"></textarea> *@
                                    <InputTextArea class="form-control" id="testing1" @bind-Value="tTopic.Body" />
                                </div>
                            @* </form> *@
                        </div>
                        <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" @onclick="@CloseCreatePost">Close</button>
                                <button type="submit" class="btn btn-primary">Send message</button>
                        </div>
                                </EditForm>
                    </div>
                </div>
            </div>
        }
</div>
@code{
    [Parameter]
    public string UrlName { get; set; }
    public bool CreatePost {get;set;} = false;
    [Parameter]
    public EventCallback<bool> OnClose { get; set; } 
    private Task ModalCancel()
    {
        return OnClose.InvokeAsync(false);
    }
    private void OpenCreatePost()
    {
        CreatePost = true;
        StateHasChanged();
    }
    private void CloseCreatePost()
    {
        CreatePost = false;
        StateHasChanged();
    }
    Topic tTopic = new Topic();
    List<Topic> TopicList = new List<Topic>();
    private void HandleValidSubmit()
    {
        Topic Topic = new Topic();
        Topic.Title= tTopic.Title;
        Topic.Body = tTopic.Body;
        Topic.Date = Convert.ToDateTime(DateTime.Now).ToString("G");

        TopicList.Add(Topic);
        tTopic = new Topic();
        CreatePost= false;
    }
    public class  Topic
    {

        public string Title { get; set; }
        public string Author { get; set; }

        public string Body { get; set; }

        public string  Date { get; set; }

        public Topic()
        {
        }
    }
}