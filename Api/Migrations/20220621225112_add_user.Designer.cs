// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SharpScape.Api.Data;

#nullable disable

namespace SharpScape.Api.Migrations
{
    [DbContext(typeof(SqliteDbContext))]
    [Migration("20220621225112_add_user")]
    partial class add_user
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.6");

            modelBuilder.Entity("SharpScape.Api.Data.Models.ForumPost", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ForumAuthorId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ForumPostBody")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ForumPostTitle")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ForumThreadId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ForumPosts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3ccec0cf-1946-4711-ac7a-5c40d2e121c2"),
                            ForumAuthorId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ForumPostBody = "post1  Body",
                            ForumPostTitle = "post1 title",
                            ForumThreadId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("bdb89202-3824-4650-aa7a-26fc882a70c7"),
                            ForumAuthorId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ForumPostBody = "post2  Body",
                            ForumPostTitle = "post2 title",
                            ForumThreadId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("31bd64c3-fe65-480f-9d1e-272be2869a2d"),
                            ForumAuthorId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ForumPostBody = "post3  Body",
                            ForumPostTitle = "post3 title",
                            ForumThreadId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("d246f695-2f24-45d1-b5e2-c39ff71eda6e"),
                            ForumAuthorId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ForumPostBody = "post4  Body",
                            ForumPostTitle = "post4 title",
                            ForumThreadId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("df3c26a2-86ee-416e-b932-09385e5b96b1"),
                            ForumAuthorId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ForumPostBody = "post5  Body",
                            ForumPostTitle = "post5 title",
                            ForumThreadId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("feb7f143-8b8b-4245-8f09-d1099cc93583"),
                            ForumAuthorId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ForumPostBody = "post6  Body",
                            ForumPostTitle = "post6 title",
                            ForumThreadId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("13d6f6c5-e0b8-401a-9d3a-4efe6043e1f7"),
                            ForumAuthorId = new Guid("00000000-0000-0000-0000-000000000000"),
                            ForumPostBody = "post7  Body",
                            ForumPostTitle = "post7 title",
                            ForumThreadId = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("SharpScape.Api.Models.ForumCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ForumCategoryAuthor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ForumCategoryDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ForumCategoryName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ForumCategories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("22b83555-4112-4335-a229-44cb3c7daa77"),
                            ForumCategoryAuthor = "Category Author 1 ",
                            ForumCategoryDescription = "Category Description 1",
                            ForumCategoryName = "Category Name 1"
                        },
                        new
                        {
                            Id = new Guid("da877f9c-6bd8-4795-b10a-8215c1c92e1c"),
                            ForumCategoryAuthor = "Category Author 2",
                            ForumCategoryDescription = "Category Description 2",
                            ForumCategoryName = "Category Name 2"
                        },
                        new
                        {
                            Id = new Guid("61464988-a9df-46f9-a348-1d316b311a15"),
                            ForumCategoryAuthor = "Category Author 3",
                            ForumCategoryDescription = "Category Description 3",
                            ForumCategoryName = "Category Name 3"
                        });
                });

            modelBuilder.Entity("SharpScape.Api.Models.ForumThread", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<int>("Replies")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Views")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Votes")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("ForumThreads");
                });

            modelBuilder.Entity("SharpScape.Api.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a7c720f9-48bd-4d6c-b234-e9cdfadd16b3"),
                            Created = new DateTime(2022, 6, 21, 18, 51, 11, 821, DateTimeKind.Local).AddTicks(549),
                            Email = "ss1@ss.ss",
                            PasswordHash = new byte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                            PasswordSalt = new byte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                            Username = "ss1"
                        },
                        new
                        {
                            Id = new Guid("2a8d7b4d-b46b-47ef-a118-0ab88330e846"),
                            Created = new DateTime(2022, 6, 21, 18, 51, 11, 821, DateTimeKind.Local).AddTicks(563),
                            Email = "ss2@ss.ss",
                            PasswordHash = new byte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                            PasswordSalt = new byte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                            Username = "ss2"
                        },
                        new
                        {
                            Id = new Guid("689f74f1-5274-444c-ac60-c33babb2143e"),
                            Created = new DateTime(2022, 6, 21, 18, 51, 11, 821, DateTimeKind.Local).AddTicks(592),
                            Email = "ss3@ss.ss",
                            PasswordHash = new byte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                            PasswordSalt = new byte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                            Username = "ss3"
                        });
                });

            modelBuilder.Entity("SharpScape.Api.Models.ForumThread", b =>
                {
                    b.HasOne("SharpScape.Api.Models.ForumCategory", "ForumCategory")
                        .WithMany("Threads")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharpScape.Api.Models.User", "Author")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("ForumCategory");
                });

            modelBuilder.Entity("SharpScape.Api.Models.ForumCategory", b =>
                {
                    b.Navigation("Threads");
                });
#pragma warning restore 612, 618
        }
    }
}
