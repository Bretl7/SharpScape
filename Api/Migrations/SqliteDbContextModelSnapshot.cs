// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SharpScape.Api.Data;

#nullable disable

namespace SharpScape.Api.Migrations
{
    [DbContext(typeof(SqliteDbContext))]
    partial class SqliteDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.6");

            modelBuilder.Entity("SharpScape.Api.Data.Models.ForumPost", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ForumAuthorId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ForumPostBody")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ForumPostTitle")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ForumThreadId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ForumPosts");
                });

            modelBuilder.Entity("SharpScape.Api.Models.ForumCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ForumCategoryAuthor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ForumCategoryDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ForumCategoryName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ForumCategories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5b0d08c2-bf6b-4711-98e7-ab0567d4244e"),
                            ForumCategoryAuthor = "Category Author 1 ",
                            ForumCategoryDescription = "Category Description 1",
                            ForumCategoryName = "Category Name 1"
                        },
                        new
                        {
                            Id = new Guid("4bae1f58-9a20-4d09-88a9-d319f416c4c7"),
                            ForumCategoryAuthor = "Category Author 2",
                            ForumCategoryDescription = "Category Description 2",
                            ForumCategoryName = "Category Name 2"
                        },
                        new
                        {
                            Id = new Guid("e27e288d-4065-4f65-9f67-e7b4a6830dcf"),
                            ForumCategoryAuthor = "Category Author 3",
                            ForumCategoryDescription = "Category Description 3",
                            ForumCategoryName = "Category Name 3"
                        });
                });

            modelBuilder.Entity("SharpScape.Api.Models.ForumThread", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<int>("Replies")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Views")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Votes")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("ForumThreads");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dd74bfbb-1874-437b-9fe0-140846e90399"),
                            Body = " body 1",
                            CategoryId = new Guid("61464988-a9df-46f9-a348-1d316b311a15"),
                            Created = new DateTime(2022, 6, 21, 18, 58, 56, 399, DateTimeKind.Local).AddTicks(2896),
                            Replies = 0,
                            Title = "tr1",
                            UserId = new Guid("a7c720f9-48bd-4d6c-b234-e9cdfadd16b3"),
                            Views = 0,
                            Votes = 0
                        });
                });

            modelBuilder.Entity("SharpScape.Api.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2077c0a9-17c8-49cf-8ec5-3c0d0524b162"),
                            Created = new DateTime(2022, 6, 21, 18, 58, 56, 399, DateTimeKind.Local).AddTicks(1913),
                            Email = "ss1@ss.ss",
                            PasswordHash = new byte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                            PasswordSalt = new byte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                            Username = "ss1"
                        },
                        new
                        {
                            Id = new Guid("d8b3c298-9915-4b79-8ebd-b01f39a7df05"),
                            Created = new DateTime(2022, 6, 21, 18, 58, 56, 399, DateTimeKind.Local).AddTicks(1928),
                            Email = "ss2@ss.ss",
                            PasswordHash = new byte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                            PasswordSalt = new byte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                            Username = "ss2"
                        },
                        new
                        {
                            Id = new Guid("7dd53e52-ae89-4be2-995d-f730b509d90b"),
                            Created = new DateTime(2022, 6, 21, 18, 58, 56, 399, DateTimeKind.Local).AddTicks(1948),
                            Email = "ss3@ss.ss",
                            PasswordHash = new byte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                            PasswordSalt = new byte[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                            Username = "ss3"
                        });
                });

            modelBuilder.Entity("SharpScape.Api.Models.ForumThread", b =>
                {
                    b.HasOne("SharpScape.Api.Models.ForumCategory", "ForumCategory")
                        .WithMany("Threads")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharpScape.Api.Models.User", "Author")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("ForumCategory");
                });

            modelBuilder.Entity("SharpScape.Api.Models.ForumCategory", b =>
                {
                    b.Navigation("Threads");
                });
#pragma warning restore 612, 618
        }
    }
}
